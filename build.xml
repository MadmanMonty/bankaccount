<?xml version="1.0" encoding="UTF-8"?>

<project name="BankAccount" default="build">
 <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
  <classpath path="/usr/share/ant/lib/sonar-ant-task-1.0.jar" />
 </taskdef>

 <target name="git-rev-parse" >
  <exec executable="git" outputproperty="git.revision">
   <arg value="rev-parse"/>
   <arg value="HEAD"/>
  </exec>
 </target>

 <target name="build"
   depends="prepare,lint,phpunit,parallelTasks,phpcb"/>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/code-browser"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>
 </target>

 <target name="prepare" depends="clean,phpab"
         description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
 </target>

 <target name="lint">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/src">
    <include name="**/*.php" />
   </fileset>

   <fileset dir="${basedir}/tests">
    <include name="**/*.php" />
   </fileset>
  </apply>
 </target>

 <target name="phpab" description="Generate autoloader scripts">
  <exec executable="phpab">
   <arg value="--output" />
   <arg path="${basedir}/src/autoload.php" />
   <arg value="--template" />
   <arg path="${basedir}/build/src_autoload.php.in" />
   <arg path="${basedir}/src" />
  </exec>

  <exec executable="phpab">
   <arg value="--output" />
   <arg path="${basedir}/tests/autoload.php" />
   <arg value="--template" />
   <arg path="${basedir}/build/tests_autoload.php.in" />
   <arg path="${basedir}/tests" />
  </exec>
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="phpunit" failonerror="true"/>
 </target>

 <target name="parallelTasks"
         description="Run code analysis tasks in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs"/>
   <antcall target="phploc"/>
  </parallel>
 </target>

 <target name="pdepend"
         description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--phpunit-xml=${basedir}/build/logs/pdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD">
  <exec executable="phpmd">
   <arg path="${basedir}/src" />
   <arg value="xml" />
   <arg value="${basedir}/build/phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/build/logs/phploc.csv" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=${basedir}/build/phpcs.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpcb"
         description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/build/logs" />
   <arg value="--source" />
   <arg path="${basedir}/src" />
   <arg value="--output" />
   <arg path="${basedir}/build/code-browser" />
  </exec>
 </target>

 <target name="sonar" depends="git-rev-parse">
  <sonar:sonar workDir="target"
               key="YOUR_PROJECT_GROUPID:YOUR_ARTIFACT_ID"
               version="${git.revision}"
               xmlns:sonar="antlib:org.sonar.ant">
   <sources>
    <path location="${basedir}/src"/>
   </sources>

   <tests>
    <path location="${basedir}/tests"/>
   </tests>

   <property key="sonar.dynamicAnalysis" value="true"/>
   <property key="sonar.language" value="php"/>

   <property key="sonar.phpCodesniffer.shouldRun" value="true"/>
   <property key="sonar.phpCodesniffer.analyzeOnly" value="true"/>
   <property key="sonar.phpCodesniffer.reportFileRelativePath" value="../../build/logs"/>
   <property key="sonar.phpCodesniffer.reportFileName" value="checkstyle.xml"/>

   <property key="sonar.phpcpd.shouldRun" value="true"/>
   <property key="sonar.phpcpd.analyzeOnly" value="true"/>
   <property key="sonar.phpcpd.reportFileRelativePath" value="../../build/logs"/>
   <property key="sonar.phpcpd.reportFileName" value="pmd-cpd.xml"/>

   <property key="sonar.phpDepend.shouldRun" value="true"/>
   <property key="sonar.phpDepend.analyzeOnly" value="true"/>
   <property key="sonar.phpDepend.reportFileRelativePath" value="../../build/logs"/>
   <property key="sonar.phpDepend.reportFileName" value="pdepend.xml"/>

   <property key="sonar.phpPmd.shouldRun" value="true"/>
   <property key="sonar.phpPmd.analyzeOnly" value="true"/>
   <property key="sonar.phpPmd.reportFileRelativePath" value="../../build/logs"/>
   <property key="sonar.phpPmd.reportFileName" value="pmd.xml"/>

   <property key="sonar.phpUnit.coverage.shouldRun" value="true"/>
   <property key="sonar.phpUnit.analyzeOnly" value="true"/>
   <property key="sonar.phpUnit.shouldRun" value="true"/>
   <property key="sonar.phpUnit.analyze.test.directory" value="false"/>
   <property key="sonar.phpUnit.reportFileRelativePath" value="../../build/logs"/>
   <property key="sonar.phpUnit.reportFileName" value="junit.xml"/>
   <property key="sonar.phpUnit.coverageReportFile" value="clover.xml"/>
  </sonar:sonar>
 </target>
</project>
